// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/customer.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Server {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Customer
  {
    static readonly string __ServiceName = "greet.Customer";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Server.SymKeyRequest> __Marshaller_greet_SymKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.SymKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Server.SymKeyReply> __Marshaller_greet_SymKeyReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.SymKeyReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Server.ListOfObjectsRequest> __Marshaller_greet_ListOfObjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.ListOfObjectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Server.ListOfObjectsReply> __Marshaller_greet_ListOfObjectsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.ListOfObjectsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Server.SendFileRequest> __Marshaller_greet_SendFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.SendFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Server.SendFileReply> __Marshaller_greet_SendFileReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.SendFileReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Server.GetFileRequest> __Marshaller_greet_GetFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.GetFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Server.GetFileReply> __Marshaller_greet_GetFileReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.GetFileReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Server.ExistsRequest> __Marshaller_greet_ExistsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.ExistsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Server.ExistsReply> __Marshaller_greet_ExistsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Server.ExistsReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Server.SymKeyRequest, global::Server.SymKeyReply> __Method_SendSymKey = new grpc::Method<global::Server.SymKeyRequest, global::Server.SymKeyReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendSymKey",
        __Marshaller_greet_SymKeyRequest,
        __Marshaller_greet_SymKeyReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Server.ListOfObjectsRequest, global::Server.ListOfObjectsReply> __Method_GetListOfObjects = new grpc::Method<global::Server.ListOfObjectsRequest, global::Server.ListOfObjectsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetListOfObjects",
        __Marshaller_greet_ListOfObjectsRequest,
        __Marshaller_greet_ListOfObjectsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Server.SendFileRequest, global::Server.SendFileReply> __Method_SendFile = new grpc::Method<global::Server.SendFileRequest, global::Server.SendFileReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendFile",
        __Marshaller_greet_SendFileRequest,
        __Marshaller_greet_SendFileReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Server.GetFileRequest, global::Server.GetFileReply> __Method_GetFile = new grpc::Method<global::Server.GetFileRequest, global::Server.GetFileReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetFile",
        __Marshaller_greet_GetFileRequest,
        __Marshaller_greet_GetFileReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Server.ExistsRequest, global::Server.ExistsReply> __Method_isExist = new grpc::Method<global::Server.ExistsRequest, global::Server.ExistsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "isExist",
        __Marshaller_greet_ExistsRequest,
        __Marshaller_greet_ExistsReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Server.CustomerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Customer</summary>
    [grpc::BindServiceMethod(typeof(Customer), "BindService")]
    public abstract partial class CustomerBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Server.SymKeyReply> SendSymKey(global::Server.SymKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Server.ListOfObjectsReply> GetListOfObjects(global::Server.ListOfObjectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Server.SendFileReply> SendFile(global::Server.SendFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetFile(global::Server.GetFileRequest request, grpc::IServerStreamWriter<global::Server.GetFileReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Server.ExistsReply> isExist(global::Server.ExistsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CustomerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SendSymKey, serviceImpl.SendSymKey)
          .AddMethod(__Method_GetListOfObjects, serviceImpl.GetListOfObjects)
          .AddMethod(__Method_SendFile, serviceImpl.SendFile)
          .AddMethod(__Method_GetFile, serviceImpl.GetFile)
          .AddMethod(__Method_isExist, serviceImpl.isExist).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CustomerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SendSymKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.SymKeyRequest, global::Server.SymKeyReply>(serviceImpl.SendSymKey));
      serviceBinder.AddMethod(__Method_GetListOfObjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.ListOfObjectsRequest, global::Server.ListOfObjectsReply>(serviceImpl.GetListOfObjects));
      serviceBinder.AddMethod(__Method_SendFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.SendFileRequest, global::Server.SendFileReply>(serviceImpl.SendFile));
      serviceBinder.AddMethod(__Method_GetFile, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Server.GetFileRequest, global::Server.GetFileReply>(serviceImpl.GetFile));
      serviceBinder.AddMethod(__Method_isExist, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Server.ExistsRequest, global::Server.ExistsReply>(serviceImpl.isExist));
    }

  }
}
#endregion
